name: Query Test
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test-branch:
    strategy:
      matrix:
        network: [ethereum]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - name: Check Variables
        run: |
          source networks/${{ matrix.network }}/.subgraph-version
          [[ ! -z "$SUBGRAPH_ID" ]] && echo "SUBGRAPH_ID is set" || (echo "::error::SUBGRAPH_ID is not set in .subgraph-version" && exit 1)
          echo "SUBGRAPH_ID=$SUBGRAPH_ID" >> $GITHUB_ENV
      - name: Get Latest Block
        run: |
          yarn subgraph latest-block ${{ matrix.network }}
      - name: Get Token Records
        run: |
          yarn subgraph query ${{ matrix.network }} --branch branch --subgraph $SUBGRAPH_ID
      - name: Upload Results
        uses: actions/upload-artifact@v3
        with:
          name: results
          path: build/${{ matrix.network }}/results.json
  test-base:
    strategy:
      matrix:
        network: [ethereum]
    runs-on: ubuntu-latest
    needs: [test-branch]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.base_ref }}
      - name: Check Variables
        run: |
          source networks/${{ matrix.network }}/.subgraph-version
          [[ ! -z "$SUBGRAPH_ID" ]] && echo "SUBGRAPH_ID is set" || (echo "::error::SUBGRAPH_ID is not set in .subgraph-version" && exit 1)
          echo "SUBGRAPH_ID=$SUBGRAPH_ID" >> $GITHUB_ENV
      - name: Download Results
        uses: actions/download-artifact@v3
        with:
          name: results
          path: build/${{ matrix.network }}
      - name: Get Token Records
        run: |
          yarn subgraph query ${{ matrix.network }} --branch base --subgraph $SUBGRAPH_ID
      - name: Upload Results
        uses: actions/upload-artifact@v3
        with:
          name: results
          path: build/${{ matrix.network }}/results.json
  compare:
    strategy:
      matrix:
        network: [ethereum]
    runs-on: ubuntu-latest
    needs: [test-branch, test-base]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - name: Download Results
        uses: actions/download-artifact@v3
        with:
          name: results
          path: build/${{ matrix.network }}
      - name: Compare Token Records
        run: |
          yarn subgraph compare ${{ matrix.network }}
      - name: Upload Results
        uses: actions/upload-artifact@v3
        with:
          name: results
          path: build/${{ matrix.network }}/results.json
      - name: Prepare Output
        id: output
        # We store the output in the github environment as it's a multiline string: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
        run: |
          echo "OUTPUT<<EOF" >> $GITHUB_ENV
          echo "$(jq -r .results.output build/${{ matrix.network }}/results.json)" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Post Comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ${{ env.OUTPUT }}
