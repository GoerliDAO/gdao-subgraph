// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  Address,
  BigInt,
  Bytes,
  Entity,
  ethereum,
  JSONValue,
  TypedMap} from "@graphprotocol/graph-ts";

export class BondProtocolMarketLaunched extends ethereum.Event {
  get params(): BondProtocolMarketLaunched__Params {
    return new BondProtocolMarketLaunched__Params(this);
  }
}

export class BondProtocolMarketLaunched__Params {
  _event: BondProtocolMarketLaunched;

  constructor(event: BondProtocolMarketLaunched) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bondToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get capacity(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get bondTerm(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class GnosisAuctionLaunched extends ethereum.Event {
  get params(): GnosisAuctionLaunched__Params {
    return new GnosisAuctionLaunched__Params(this);
  }
}

export class GnosisAuctionLaunched__Params {
  _event: GnosisAuctionLaunched;

  constructor(event: GnosisAuctionLaunched) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bondToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get capacity(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get bondTerm(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BondManager__batchAuctionParametersResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    const map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getAuctionCancelTime(): BigInt {
    return this.value0;
  }

  getAuctionTime(): BigInt {
    return this.value1;
  }

  getMinPctSold(): BigInt {
    return this.value2;
  }

  getMinBuyAmount(): BigInt {
    return this.value3;
  }

  getMinFundingThreshold(): BigInt {
    return this.value4;
  }
}

export class BondManager__fixedExpiryParametersResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    const map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    return map;
  }

  getInitialPrice(): BigInt {
    return this.value0;
  }

  getMinPrice(): BigInt {
    return this.value1;
  }

  getAuctionTime(): BigInt {
    return this.value2;
  }

  getDebtBuffer(): BigInt {
    return this.value3;
  }

  getDepositInterval(): BigInt {
    return this.value4;
  }

  getCapacityInQuote(): boolean {
    return this.value5;
  }
}

export class BondManager__requestPermissionsResultRequestsStruct extends ethereum.Tuple {
  get keycode(): Bytes {
    return this[0].toBytes();
  }

  get funcSelector(): Bytes {
    return this[1].toBytes();
  }
}

export class BondManager extends ethereum.SmartContract {
  static bind(address: Address): BondManager {
    return new BondManager("BondManager", address);
  }

  MINTR(): Address {
    const result = super.call("MINTR", "MINTR():(address)", []);

    return result[0].toAddress();
  }

  try_MINTR(): ethereum.CallResult<Address> {
    const result = super.tryCall("MINTR", "MINTR():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ROLES(): Address {
    const result = super.call("ROLES", "ROLES():(address)", []);

    return result[0].toAddress();
  }

  try_ROLES(): ethereum.CallResult<Address> {
    const result = super.tryCall("ROLES", "ROLES():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  TRSRY(): Address {
    const result = super.call("TRSRY", "TRSRY():(address)", []);

    return result[0].toAddress();
  }

  try_TRSRY(): ethereum.CallResult<Address> {
    const result = super.tryCall("TRSRY", "TRSRY():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  batchAuctionParameters(): BondManager__batchAuctionParametersResult {
    const result = super.call(
      "batchAuctionParameters",
      "batchAuctionParameters():(uint48,uint48,uint96,uint256,uint256)",
      []
    );

    return new BondManager__batchAuctionParametersResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt()
    );
  }

  try_batchAuctionParameters(): ethereum.CallResult<
    BondManager__batchAuctionParametersResult
  > {
    const result = super.tryCall(
      "batchAuctionParameters",
      "batchAuctionParameters():(uint48,uint48,uint96,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(
      new BondManager__batchAuctionParametersResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt()
      )
    );
  }

  bondCallback(): Address {
    const result = super.call("bondCallback", "bondCallback():(address)", []);

    return result[0].toAddress();
  }

  try_bondCallback(): ethereum.CallResult<Address> {
    const result = super.tryCall("bondCallback", "bondCallback():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  configureDependencies(): Array<Bytes> {
    const result = super.call(
      "configureDependencies",
      "configureDependencies():(bytes5[])",
      []
    );

    return result[0].toBytesArray();
  }

  try_configureDependencies(): ethereum.CallResult<Array<Bytes>> {
    const result = super.tryCall(
      "configureDependencies",
      "configureDependencies():(bytes5[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  createBatchAuction(capacity_: BigInt, bondTerm_: BigInt): BigInt {
    const result = super.call(
      "createBatchAuction",
      "createBatchAuction(uint96,uint48):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(capacity_),
        ethereum.Value.fromUnsignedBigInt(bondTerm_)
      ]
    );

    return result[0].toBigInt();
  }

  try_createBatchAuction(
    capacity_: BigInt,
    bondTerm_: BigInt
  ): ethereum.CallResult<BigInt> {
    const result = super.tryCall(
      "createBatchAuction",
      "createBatchAuction(uint96,uint48):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(capacity_),
        ethereum.Value.fromUnsignedBigInt(bondTerm_)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createFixedExpiryBondMarket(capacity_: BigInt, bondTerm_: BigInt): BigInt {
    const result = super.call(
      "createFixedExpiryBondMarket",
      "createFixedExpiryBondMarket(uint256,uint48):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(capacity_),
        ethereum.Value.fromUnsignedBigInt(bondTerm_)
      ]
    );

    return result[0].toBigInt();
  }

  try_createFixedExpiryBondMarket(
    capacity_: BigInt,
    bondTerm_: BigInt
  ): ethereum.CallResult<BigInt> {
    const result = super.tryCall(
      "createFixedExpiryBondMarket",
      "createFixedExpiryBondMarket(uint256,uint48):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(capacity_),
        ethereum.Value.fromUnsignedBigInt(bondTerm_)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fixedExpiryAuctioneer(): Address {
    const result = super.call(
      "fixedExpiryAuctioneer",
      "fixedExpiryAuctioneer():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_fixedExpiryAuctioneer(): ethereum.CallResult<Address> {
    const result = super.tryCall(
      "fixedExpiryAuctioneer",
      "fixedExpiryAuctioneer():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  fixedExpiryParameters(): BondManager__fixedExpiryParametersResult {
    const result = super.call(
      "fixedExpiryParameters",
      "fixedExpiryParameters():(uint256,uint256,uint48,uint32,uint32,bool)",
      []
    );

    return new BondManager__fixedExpiryParametersResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBoolean()
    );
  }

  try_fixedExpiryParameters(): ethereum.CallResult<
    BondManager__fixedExpiryParametersResult
  > {
    const result = super.tryCall(
      "fixedExpiryParameters",
      "fixedExpiryParameters():(uint256,uint256,uint48,uint32,uint32,bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(
      new BondManager__fixedExpiryParametersResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBoolean()
      )
    );
  }

  fixedExpiryTeller(): Address {
    const result = super.call(
      "fixedExpiryTeller",
      "fixedExpiryTeller():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_fixedExpiryTeller(): ethereum.CallResult<Address> {
    const result = super.tryCall(
      "fixedExpiryTeller",
      "fixedExpiryTeller():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  gnosisEasyAuction(): Address {
    const result = super.call(
      "gnosisEasyAuction",
      "gnosisEasyAuction():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_gnosisEasyAuction(): ethereum.CallResult<Address> {
    const result = super.tryCall(
      "gnosisEasyAuction",
      "gnosisEasyAuction():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isActive(): boolean {
    const result = super.call("isActive", "isActive():(bool)", []);

    return result[0].toBoolean();
  }

  try_isActive(): ethereum.CallResult<boolean> {
    const result = super.tryCall("isActive", "isActive():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  kernel(): Address {
    const result = super.call("kernel", "kernel():(address)", []);

    return result[0].toAddress();
  }

  try_kernel(): ethereum.CallResult<Address> {
    const result = super.tryCall("kernel", "kernel():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ohm(): Address {
    const result = super.call("ohm", "ohm():(address)", []);

    return result[0].toAddress();
  }

  try_ohm(): ethereum.CallResult<Address> {
    const result = super.tryCall("ohm", "ohm():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  requestPermissions(): Array<
    BondManager__requestPermissionsResultRequestsStruct
  > {
    const result = super.call(
      "requestPermissions",
      "requestPermissions():((bytes5,bytes4)[])",
      []
    );

    return result[0].toTupleArray<
      BondManager__requestPermissionsResultRequestsStruct
    >();
  }

  try_requestPermissions(): ethereum.CallResult<
    Array<BondManager__requestPermissionsResultRequestsStruct>
  > {
    const result = super.tryCall(
      "requestPermissions",
      "requestPermissions():((bytes5,bytes4)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        BondManager__requestPermissionsResultRequestsStruct
      >()
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get kernel_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get fixedExpiryAuctioneer_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get fixedExpiryTeller_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get gnosisEasyAuction_(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get ohm_(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ChangeKernelCall extends ethereum.Call {
  get inputs(): ChangeKernelCall__Inputs {
    return new ChangeKernelCall__Inputs(this);
  }

  get outputs(): ChangeKernelCall__Outputs {
    return new ChangeKernelCall__Outputs(this);
  }
}

export class ChangeKernelCall__Inputs {
  _call: ChangeKernelCall;

  constructor(call: ChangeKernelCall) {
    this._call = call;
  }

  get newKernel_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeKernelCall__Outputs {
  _call: ChangeKernelCall;

  constructor(call: ChangeKernelCall) {
    this._call = call;
  }
}

export class CloseFixedExpiryBondMarketCall extends ethereum.Call {
  get inputs(): CloseFixedExpiryBondMarketCall__Inputs {
    return new CloseFixedExpiryBondMarketCall__Inputs(this);
  }

  get outputs(): CloseFixedExpiryBondMarketCall__Outputs {
    return new CloseFixedExpiryBondMarketCall__Outputs(this);
  }
}

export class CloseFixedExpiryBondMarketCall__Inputs {
  _call: CloseFixedExpiryBondMarketCall;

  constructor(call: CloseFixedExpiryBondMarketCall) {
    this._call = call;
  }

  get marketId_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CloseFixedExpiryBondMarketCall__Outputs {
  _call: CloseFixedExpiryBondMarketCall;

  constructor(call: CloseFixedExpiryBondMarketCall) {
    this._call = call;
  }
}

export class ConfigureDependenciesCall extends ethereum.Call {
  get inputs(): ConfigureDependenciesCall__Inputs {
    return new ConfigureDependenciesCall__Inputs(this);
  }

  get outputs(): ConfigureDependenciesCall__Outputs {
    return new ConfigureDependenciesCall__Outputs(this);
  }
}

export class ConfigureDependenciesCall__Inputs {
  _call: ConfigureDependenciesCall;

  constructor(call: ConfigureDependenciesCall) {
    this._call = call;
  }
}

export class ConfigureDependenciesCall__Outputs {
  _call: ConfigureDependenciesCall;

  constructor(call: ConfigureDependenciesCall) {
    this._call = call;
  }

  get dependencies(): Array<Bytes> {
    return this._call.outputValues[0].value.toBytesArray();
  }
}

export class CreateBatchAuctionCall extends ethereum.Call {
  get inputs(): CreateBatchAuctionCall__Inputs {
    return new CreateBatchAuctionCall__Inputs(this);
  }

  get outputs(): CreateBatchAuctionCall__Outputs {
    return new CreateBatchAuctionCall__Outputs(this);
  }
}

export class CreateBatchAuctionCall__Inputs {
  _call: CreateBatchAuctionCall;

  constructor(call: CreateBatchAuctionCall) {
    this._call = call;
  }

  get capacity_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get bondTerm_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreateBatchAuctionCall__Outputs {
  _call: CreateBatchAuctionCall;

  constructor(call: CreateBatchAuctionCall) {
    this._call = call;
  }

  get auctionId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateFixedExpiryBondMarketCall extends ethereum.Call {
  get inputs(): CreateFixedExpiryBondMarketCall__Inputs {
    return new CreateFixedExpiryBondMarketCall__Inputs(this);
  }

  get outputs(): CreateFixedExpiryBondMarketCall__Outputs {
    return new CreateFixedExpiryBondMarketCall__Outputs(this);
  }
}

export class CreateFixedExpiryBondMarketCall__Inputs {
  _call: CreateFixedExpiryBondMarketCall;

  constructor(call: CreateFixedExpiryBondMarketCall) {
    this._call = call;
  }

  get capacity_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get bondTerm_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreateFixedExpiryBondMarketCall__Outputs {
  _call: CreateFixedExpiryBondMarketCall;

  constructor(call: CreateFixedExpiryBondMarketCall) {
    this._call = call;
  }

  get marketId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class EmergencySetApprovalCall extends ethereum.Call {
  get inputs(): EmergencySetApprovalCall__Inputs {
    return new EmergencySetApprovalCall__Inputs(this);
  }

  get outputs(): EmergencySetApprovalCall__Outputs {
    return new EmergencySetApprovalCall__Outputs(this);
  }
}

export class EmergencySetApprovalCall__Inputs {
  _call: EmergencySetApprovalCall;

  constructor(call: EmergencySetApprovalCall) {
    this._call = call;
  }

  get contract_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class EmergencySetApprovalCall__Outputs {
  _call: EmergencySetApprovalCall;

  constructor(call: EmergencySetApprovalCall) {
    this._call = call;
  }
}

export class EmergencyShutdownFixedExpiryMarketCall extends ethereum.Call {
  get inputs(): EmergencyShutdownFixedExpiryMarketCall__Inputs {
    return new EmergencyShutdownFixedExpiryMarketCall__Inputs(this);
  }

  get outputs(): EmergencyShutdownFixedExpiryMarketCall__Outputs {
    return new EmergencyShutdownFixedExpiryMarketCall__Outputs(this);
  }
}

export class EmergencyShutdownFixedExpiryMarketCall__Inputs {
  _call: EmergencyShutdownFixedExpiryMarketCall;

  constructor(call: EmergencyShutdownFixedExpiryMarketCall) {
    this._call = call;
  }

  get marketId_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class EmergencyShutdownFixedExpiryMarketCall__Outputs {
  _call: EmergencyShutdownFixedExpiryMarketCall;

  constructor(call: EmergencyShutdownFixedExpiryMarketCall) {
    this._call = call;
  }
}

export class EmergencyWithdrawCall extends ethereum.Call {
  get inputs(): EmergencyWithdrawCall__Inputs {
    return new EmergencyWithdrawCall__Inputs(this);
  }

  get outputs(): EmergencyWithdrawCall__Outputs {
    return new EmergencyWithdrawCall__Outputs(this);
  }
}

export class EmergencyWithdrawCall__Inputs {
  _call: EmergencyWithdrawCall;

  constructor(call: EmergencyWithdrawCall) {
    this._call = call;
  }

  get amount_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class EmergencyWithdrawCall__Outputs {
  _call: EmergencyWithdrawCall;

  constructor(call: EmergencyWithdrawCall) {
    this._call = call;
  }
}

export class SetBatchAuctionParametersCall extends ethereum.Call {
  get inputs(): SetBatchAuctionParametersCall__Inputs {
    return new SetBatchAuctionParametersCall__Inputs(this);
  }

  get outputs(): SetBatchAuctionParametersCall__Outputs {
    return new SetBatchAuctionParametersCall__Outputs(this);
  }
}

export class SetBatchAuctionParametersCall__Inputs {
  _call: SetBatchAuctionParametersCall;

  constructor(call: SetBatchAuctionParametersCall) {
    this._call = call;
  }

  get auctionCancelTime_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get auctionTime_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get minPctSold_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get minBuyAmount_(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get minFundingThreshold_(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class SetBatchAuctionParametersCall__Outputs {
  _call: SetBatchAuctionParametersCall;

  constructor(call: SetBatchAuctionParametersCall) {
    this._call = call;
  }
}

export class SetCallbackCall extends ethereum.Call {
  get inputs(): SetCallbackCall__Inputs {
    return new SetCallbackCall__Inputs(this);
  }

  get outputs(): SetCallbackCall__Outputs {
    return new SetCallbackCall__Outputs(this);
  }
}

export class SetCallbackCall__Inputs {
  _call: SetCallbackCall;

  constructor(call: SetCallbackCall) {
    this._call = call;
  }

  get newCallback_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCallbackCall__Outputs {
  _call: SetCallbackCall;

  constructor(call: SetCallbackCall) {
    this._call = call;
  }
}

export class SetFixedExpiryParametersCall extends ethereum.Call {
  get inputs(): SetFixedExpiryParametersCall__Inputs {
    return new SetFixedExpiryParametersCall__Inputs(this);
  }

  get outputs(): SetFixedExpiryParametersCall__Outputs {
    return new SetFixedExpiryParametersCall__Outputs(this);
  }
}

export class SetFixedExpiryParametersCall__Inputs {
  _call: SetFixedExpiryParametersCall;

  constructor(call: SetFixedExpiryParametersCall) {
    this._call = call;
  }

  get initialPrice_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get minPrice_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get auctionTime_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get debtBuffer_(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get depositInterval_(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get capacityInQuote_(): boolean {
    return this._call.inputValues[5].value.toBoolean();
  }
}

export class SetFixedExpiryParametersCall__Outputs {
  _call: SetFixedExpiryParametersCall;

  constructor(call: SetFixedExpiryParametersCall) {
    this._call = call;
  }
}

export class SettleBatchAuctionCall extends ethereum.Call {
  get inputs(): SettleBatchAuctionCall__Inputs {
    return new SettleBatchAuctionCall__Inputs(this);
  }

  get outputs(): SettleBatchAuctionCall__Outputs {
    return new SettleBatchAuctionCall__Outputs(this);
  }
}

export class SettleBatchAuctionCall__Inputs {
  _call: SettleBatchAuctionCall;

  constructor(call: SettleBatchAuctionCall) {
    this._call = call;
  }

  get auctionId_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SettleBatchAuctionCall__Outputs {
  _call: SettleBatchAuctionCall;

  constructor(call: SettleBatchAuctionCall) {
    this._call = call;
  }
}
