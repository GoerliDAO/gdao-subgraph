// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  Address,
  BigInt,
  Bytes,
  Entity,
  ethereum,
  JSONValue,
  TypedMap} from "@graphprotocol/graph-ts";

export class AuthorityUpdated extends ethereum.Event {
  get params(): AuthorityUpdated__Params {
    return new AuthorityUpdated__Params(this);
  }
}

export class AuthorityUpdated__Params {
  _event: AuthorityUpdated;

  constructor(event: AuthorityUpdated) {
    this._event = event;
  }

  get authority(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Borrowed extends ethereum.Event {
  get params(): Borrowed__Params {
    return new Borrowed__Params(this);
  }
}

export class Borrowed__Params {
  _event: Borrowed;

  constructor(event: Borrowed) {
    this._event = event;
  }

  get _borrower(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _amountToBorrow(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _borrowersDebt(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _totalOutstandingGlobalDebt(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BorrowerAllowed extends ethereum.Event {
  get params(): BorrowerAllowed__Params {
    return new BorrowerAllowed__Params(this);
  }
}

export class BorrowerAllowed__Params {
  _event: BorrowerAllowed;

  constructor(event: BorrowerAllowed) {
    this._event = event;
  }

  get _borrower(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _lpBorrower(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get _nonLpBorrower(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class BorrowerDebtLimitSet extends ethereum.Event {
  get params(): BorrowerDebtLimitSet__Params {
    return new BorrowerDebtLimitSet__Params(this);
  }
}

export class BorrowerDebtLimitSet__Params {
  _event: BorrowerDebtLimitSet;

  constructor(event: BorrowerDebtLimitSet) {
    this._event = event;
  }

  get _borrower(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _limit(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BorrowerDeposit extends ethereum.Event {
  get params(): BorrowerDeposit__Params {
    return new BorrowerDeposit__Params(this);
  }
}

export class BorrowerDeposit__Params {
  _event: BorrowerDeposit;

  constructor(event: BorrowerDeposit) {
    this._event = event;
  }

  get _borrower(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _amountToDeposit(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BorrowerRevoked extends ethereum.Event {
  get params(): BorrowerRevoked__Params {
    return new BorrowerRevoked__Params(this);
  }
}

export class BorrowerRevoked__Params {
  _event: BorrowerRevoked;

  constructor(event: BorrowerRevoked) {
    this._event = event;
  }

  get _borrower(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DebtPaidWithCollateral extends ethereum.Event {
  get params(): DebtPaidWithCollateral__Params {
    return new DebtPaidWithCollateral__Params(this);
  }
}

export class DebtPaidWithCollateral__Params {
  _event: DebtPaidWithCollateral;

  constructor(event: DebtPaidWithCollateral) {
    this._event = event;
  }

  get _borrower(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _paidDebt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _currentCollateral(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _totalOutstandingGlobalDebt(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class DebtPaidWithCollateralAndBurnTheRest extends ethereum.Event {
  get params(): DebtPaidWithCollateralAndBurnTheRest__Params {
    return new DebtPaidWithCollateralAndBurnTheRest__Params(this);
  }
}

export class DebtPaidWithCollateralAndBurnTheRest__Params {
  _event: DebtPaidWithCollateralAndBurnTheRest;

  constructor(event: DebtPaidWithCollateralAndBurnTheRest) {
    this._event = event;
  }

  get _borrower(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _paidDebt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _totalOutstandingGlobalDebt(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _collateralLeftToBurn(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class DebtPaidWithCollateralAndWithdrawTheRest extends ethereum.Event {
  get params(): DebtPaidWithCollateralAndWithdrawTheRest__Params {
    return new DebtPaidWithCollateralAndWithdrawTheRest__Params(this);
  }
}

export class DebtPaidWithCollateralAndWithdrawTheRest__Params {
  _event: DebtPaidWithCollateralAndWithdrawTheRest;

  constructor(event: DebtPaidWithCollateralAndWithdrawTheRest) {
    this._event = event;
  }

  get _borrower(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _paidDebt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _totalOutstandingGlobalDebt(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _collateralLeftForWithdraw(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class DebtPaidWithOHM extends ethereum.Event {
  get params(): DebtPaidWithOHM__Params {
    return new DebtPaidWithOHM__Params(this);
  }
}

export class DebtPaidWithOHM__Params {
  _event: DebtPaidWithOHM;

  constructor(event: DebtPaidWithOHM) {
    this._event = event;
  }

  get _borrower(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _paidDebt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _currentDebt(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _totalOutstandingGlobalDebt(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class EmergencyShutdown extends ethereum.Event {
  get params(): EmergencyShutdown__Params {
    return new EmergencyShutdown__Params(this);
  }
}

export class EmergencyShutdown__Params {
  _event: EmergencyShutdown;

  constructor(event: EmergencyShutdown) {
    this._event = event;
  }

  get active_(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class GlobalLimitChanged extends ethereum.Event {
  get params(): GlobalLimitChanged__Params {
    return new GlobalLimitChanged__Params(this);
  }
}

export class GlobalLimitChanged__Params {
  _event: GlobalLimitChanged;

  constructor(event: GlobalLimitChanged) {
    this._event = event;
  }

  get _limit(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class LpInteraction extends ethereum.Event {
  get params(): LpInteraction__Params {
    return new LpInteraction__Params(this);
  }
}

export class LpInteraction__Params {
  _event: LpInteraction;

  constructor(event: LpInteraction) {
    this._event = event;
  }

  get _borrower(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _ohmBorrowed(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _liquidityCreated(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _currentDebt(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _totalOutstandingGlobalDebt(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class LpWithdrawn extends ethereum.Event {
  get params(): LpWithdrawn__Params {
    return new LpWithdrawn__Params(this);
  }
}

export class LpWithdrawn__Params {
  _event: LpWithdrawn;

  constructor(event: LpWithdrawn) {
    this._event = event;
  }

  get _borrower(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _liquidity(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _lpToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Withdrawal extends ethereum.Event {
  get params(): Withdrawal__Params {
    return new Withdrawal__Params(this);
  }
}

export class Withdrawal__Params {
  _event: Withdrawal;

  constructor(event: Withdrawal) {
    this._event = event;
  }

  get _borrower(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _amountToWithdraw(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _currentCollateral(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class IncurDebt__borrowersResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: boolean;
  value5: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: boolean,
    value5: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    const map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    return map;
  }

  getDebt(): BigInt {
    return this.value0;
  }

  getLimit(): BigInt {
    return this.value1;
  }

  getCollateralInGOHM(): BigInt {
    return this.value2;
  }

  getUnwrappedGOHM(): BigInt {
    return this.value3;
  }

  getIsNonLpBorrower(): boolean {
    return this.value4;
  }

  getIsLpBorrower(): boolean {
    return this.value5;
  }
}

export class IncurDebt extends ethereum.SmartContract {
  static bind(address: Address): IncurDebt {
    return new IncurDebt("IncurDebt", address);
  }

  OHM(): Address {
    const result = super.call("OHM", "OHM():(address)", []);

    return result[0].toAddress();
  }

  try_OHM(): ethereum.CallResult<Address> {
    const result = super.tryCall("OHM", "OHM():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  authority(): Address {
    const result = super.call("authority", "authority():(address)", []);

    return result[0].toAddress();
  }

  try_authority(): ethereum.CallResult<Address> {
    const result = super.tryCall("authority", "authority():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  borrowers(param0: Address): IncurDebt__borrowersResult {
    const result = super.call(
      "borrowers",
      "borrowers(address):(uint128,uint128,uint128,uint128,bool,bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new IncurDebt__borrowersResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBoolean(),
      result[5].toBoolean()
    );
  }

  try_borrowers(
    param0: Address
  ): ethereum.CallResult<IncurDebt__borrowersResult> {
    const result = super.tryCall(
      "borrowers",
      "borrowers(address):(uint128,uint128,uint128,uint128,bool,bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(
      new IncurDebt__borrowersResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBoolean(),
        value[5].toBoolean()
      )
    );
  }

  borrowsDisabled(): boolean {
    const result = super.call("borrowsDisabled", "borrowsDisabled():(bool)", []);

    return result[0].toBoolean();
  }

  try_borrowsDisabled(): ethereum.CallResult<boolean> {
    const result = super.tryCall(
      "borrowsDisabled",
      "borrowsDisabled():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  createLP(
    _ohmAmount: BigInt,
    _strategy: Address,
    _strategyParams: Bytes
  ): BigInt {
    const result = super.call(
      "createLP",
      "createLP(uint256,address,bytes):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_ohmAmount),
        ethereum.Value.fromAddress(_strategy),
        ethereum.Value.fromBytes(_strategyParams)
      ]
    );

    return result[0].toBigInt();
  }

  try_createLP(
    _ohmAmount: BigInt,
    _strategy: Address,
    _strategyParams: Bytes
  ): ethereum.CallResult<BigInt> {
    const result = super.tryCall(
      "createLP",
      "createLP(uint256,address,bytes):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_ohmAmount),
        ethereum.Value.fromAddress(_strategy),
        ethereum.Value.fromBytes(_strategyParams)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  depositsDisabled(): boolean {
    const result = super.call(
      "depositsDisabled",
      "depositsDisabled():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_depositsDisabled(): ethereum.CallResult<boolean> {
    const result = super.tryCall(
      "depositsDisabled",
      "depositsDisabled():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  encodeBalancerCreateParams(
    _poolId: Bytes,
    _assets: Array<Address>,
    _maxAmountsIn: Array<BigInt>,
    _minimumBPT: BigInt
  ): Bytes {
    const result = super.call(
      "encodeBalancerCreateParams",
      "encodeBalancerCreateParams(bytes32,address[],uint256[],uint256):(bytes)",
      [
        ethereum.Value.fromFixedBytes(_poolId),
        ethereum.Value.fromAddressArray(_assets),
        ethereum.Value.fromUnsignedBigIntArray(_maxAmountsIn),
        ethereum.Value.fromUnsignedBigInt(_minimumBPT)
      ]
    );

    return result[0].toBytes();
  }

  try_encodeBalancerCreateParams(
    _poolId: Bytes,
    _assets: Array<Address>,
    _maxAmountsIn: Array<BigInt>,
    _minimumBPT: BigInt
  ): ethereum.CallResult<Bytes> {
    const result = super.tryCall(
      "encodeBalancerCreateParams",
      "encodeBalancerCreateParams(bytes32,address[],uint256[],uint256):(bytes)",
      [
        ethereum.Value.fromFixedBytes(_poolId),
        ethereum.Value.fromAddressArray(_assets),
        ethereum.Value.fromUnsignedBigIntArray(_maxAmountsIn),
        ethereum.Value.fromUnsignedBigInt(_minimumBPT)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  encodeBalancerRemoveParams(
    _poolId: Bytes,
    _assets: Array<Address>,
    _minAmountsOut: Array<BigInt>
  ): Bytes {
    const result = super.call(
      "encodeBalancerRemoveParams",
      "encodeBalancerRemoveParams(bytes32,address[],uint256[]):(bytes)",
      [
        ethereum.Value.fromFixedBytes(_poolId),
        ethereum.Value.fromAddressArray(_assets),
        ethereum.Value.fromUnsignedBigIntArray(_minAmountsOut)
      ]
    );

    return result[0].toBytes();
  }

  try_encodeBalancerRemoveParams(
    _poolId: Bytes,
    _assets: Array<Address>,
    _minAmountsOut: Array<BigInt>
  ): ethereum.CallResult<Bytes> {
    const result = super.tryCall(
      "encodeBalancerRemoveParams",
      "encodeBalancerRemoveParams(bytes32,address[],uint256[]):(bytes)",
      [
        ethereum.Value.fromFixedBytes(_poolId),
        ethereum.Value.fromAddressArray(_assets),
        ethereum.Value.fromUnsignedBigIntArray(_minAmountsOut)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  encodeCurveCreateParams(
    _amounts: Array<BigInt>,
    _min_mint_amount: BigInt,
    _pairTokenAddress: Address,
    _poolAddress: Address
  ): Bytes {
    const result = super.call(
      "encodeCurveCreateParams",
      "encodeCurveCreateParams(uint256[2],uint256,address,address):(bytes)",
      [
        ethereum.Value.fromUnsignedBigIntArray(_amounts),
        ethereum.Value.fromUnsignedBigInt(_min_mint_amount),
        ethereum.Value.fromAddress(_pairTokenAddress),
        ethereum.Value.fromAddress(_poolAddress)
      ]
    );

    return result[0].toBytes();
  }

  try_encodeCurveCreateParams(
    _amounts: Array<BigInt>,
    _min_mint_amount: BigInt,
    _pairTokenAddress: Address,
    _poolAddress: Address
  ): ethereum.CallResult<Bytes> {
    const result = super.tryCall(
      "encodeCurveCreateParams",
      "encodeCurveCreateParams(uint256[2],uint256,address,address):(bytes)",
      [
        ethereum.Value.fromUnsignedBigIntArray(_amounts),
        ethereum.Value.fromUnsignedBigInt(_min_mint_amount),
        ethereum.Value.fromAddress(_pairTokenAddress),
        ethereum.Value.fromAddress(_poolAddress)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  encodeCurveRemoveParams(
    _burn_amount: BigInt,
    _min_amounts: Array<BigInt>
  ): Bytes {
    const result = super.call(
      "encodeCurveRemoveParams",
      "encodeCurveRemoveParams(uint256,uint256[2]):(bytes)",
      [
        ethereum.Value.fromUnsignedBigInt(_burn_amount),
        ethereum.Value.fromUnsignedBigIntArray(_min_amounts)
      ]
    );

    return result[0].toBytes();
  }

  try_encodeCurveRemoveParams(
    _burn_amount: BigInt,
    _min_amounts: Array<BigInt>
  ): ethereum.CallResult<Bytes> {
    const result = super.tryCall(
      "encodeCurveRemoveParams",
      "encodeCurveRemoveParams(uint256,uint256[2]):(bytes)",
      [
        ethereum.Value.fromUnsignedBigInt(_burn_amount),
        ethereum.Value.fromUnsignedBigIntArray(_min_amounts)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  encodeUniswapCreateParams(
    _tokenA: Address,
    _tokenB: Address,
    _amountADesired: BigInt,
    _amountBDesired: BigInt,
    _amountAMin: BigInt,
    _amountBMin: BigInt
  ): Bytes {
    const result = super.call(
      "encodeUniswapCreateParams",
      "encodeUniswapCreateParams(address,address,uint256,uint256,uint256,uint256):(bytes)",
      [
        ethereum.Value.fromAddress(_tokenA),
        ethereum.Value.fromAddress(_tokenB),
        ethereum.Value.fromUnsignedBigInt(_amountADesired),
        ethereum.Value.fromUnsignedBigInt(_amountBDesired),
        ethereum.Value.fromUnsignedBigInt(_amountAMin),
        ethereum.Value.fromUnsignedBigInt(_amountBMin)
      ]
    );

    return result[0].toBytes();
  }

  try_encodeUniswapCreateParams(
    _tokenA: Address,
    _tokenB: Address,
    _amountADesired: BigInt,
    _amountBDesired: BigInt,
    _amountAMin: BigInt,
    _amountBMin: BigInt
  ): ethereum.CallResult<Bytes> {
    const result = super.tryCall(
      "encodeUniswapCreateParams",
      "encodeUniswapCreateParams(address,address,uint256,uint256,uint256,uint256):(bytes)",
      [
        ethereum.Value.fromAddress(_tokenA),
        ethereum.Value.fromAddress(_tokenB),
        ethereum.Value.fromUnsignedBigInt(_amountADesired),
        ethereum.Value.fromUnsignedBigInt(_amountBDesired),
        ethereum.Value.fromUnsignedBigInt(_amountAMin),
        ethereum.Value.fromUnsignedBigInt(_amountBMin)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  encodeUniswapRemoveParams(
    _tokenA: Address,
    _tokenB: Address,
    _liquidity: BigInt,
    _amountAMin: BigInt,
    _amountBMin: BigInt
  ): Bytes {
    const result = super.call(
      "encodeUniswapRemoveParams",
      "encodeUniswapRemoveParams(address,address,uint256,uint256,uint256):(bytes)",
      [
        ethereum.Value.fromAddress(_tokenA),
        ethereum.Value.fromAddress(_tokenB),
        ethereum.Value.fromUnsignedBigInt(_liquidity),
        ethereum.Value.fromUnsignedBigInt(_amountAMin),
        ethereum.Value.fromUnsignedBigInt(_amountBMin)
      ]
    );

    return result[0].toBytes();
  }

  try_encodeUniswapRemoveParams(
    _tokenA: Address,
    _tokenB: Address,
    _liquidity: BigInt,
    _amountAMin: BigInt,
    _amountBMin: BigInt
  ): ethereum.CallResult<Bytes> {
    const result = super.tryCall(
      "encodeUniswapRemoveParams",
      "encodeUniswapRemoveParams(address,address,uint256,uint256,uint256):(bytes)",
      [
        ethereum.Value.fromAddress(_tokenA),
        ethereum.Value.fromAddress(_tokenB),
        ethereum.Value.fromUnsignedBigInt(_liquidity),
        ethereum.Value.fromUnsignedBigInt(_amountAMin),
        ethereum.Value.fromUnsignedBigInt(_amountBMin)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  gOHM(): Address {
    const result = super.call("gOHM", "gOHM():(address)", []);

    return result[0].toAddress();
  }

  try_gOHM(): ethereum.CallResult<Address> {
    const result = super.tryCall("gOHM", "gOHM():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAvailableToBorrow(): BigInt {
    const result = super.call(
      "getAvailableToBorrow",
      "getAvailableToBorrow():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getAvailableToBorrow(): ethereum.CallResult<BigInt> {
    const result = super.tryCall(
      "getAvailableToBorrow",
      "getAvailableToBorrow():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  globalDebtLimit(): BigInt {
    const result = super.call(
      "globalDebtLimit",
      "globalDebtLimit():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_globalDebtLimit(): ethereum.CallResult<BigInt> {
    const result = super.tryCall(
      "globalDebtLimit",
      "globalDebtLimit():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lpTokenOwnership(param0: Address, param1: Address): BigInt {
    const result = super.call(
      "lpTokenOwnership",
      "lpTokenOwnership(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBigInt();
  }

  try_lpTokenOwnership(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<BigInt> {
    const result = super.tryCall(
      "lpTokenOwnership",
      "lpTokenOwnership(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  removeLP(
    _liquidity: BigInt,
    _strategy: Address,
    _lpToken: Address,
    _strategyParams: Bytes
  ): BigInt {
    const result = super.call(
      "removeLP",
      "removeLP(uint256,address,address,bytes):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_liquidity),
        ethereum.Value.fromAddress(_strategy),
        ethereum.Value.fromAddress(_lpToken),
        ethereum.Value.fromBytes(_strategyParams)
      ]
    );

    return result[0].toBigInt();
  }

  try_removeLP(
    _liquidity: BigInt,
    _strategy: Address,
    _lpToken: Address,
    _strategyParams: Bytes
  ): ethereum.CallResult<BigInt> {
    const result = super.tryCall(
      "removeLP",
      "removeLP(uint256,address,address,bytes):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_liquidity),
        ethereum.Value.fromAddress(_strategy),
        ethereum.Value.fromAddress(_lpToken),
        ethereum.Value.fromBytes(_strategyParams)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  repaysDisabled(): boolean {
    const result = super.call("repaysDisabled", "repaysDisabled():(bool)", []);

    return result[0].toBoolean();
  }

  try_repaysDisabled(): ethereum.CallResult<boolean> {
    const result = super.tryCall("repaysDisabled", "repaysDisabled():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  sOHM(): Address {
    const result = super.call("sOHM", "sOHM():(address)", []);

    return result[0].toAddress();
  }

  try_sOHM(): ethereum.CallResult<Address> {
    const result = super.tryCall("sOHM", "sOHM():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  staking(): Address {
    const result = super.call("staking", "staking():(address)", []);

    return result[0].toAddress();
  }

  try_staking(): ethereum.CallResult<Address> {
    const result = super.tryCall("staking", "staking():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  strategies(param0: Address): boolean {
    const result = super.call("strategies", "strategies(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_strategies(param0: Address): ethereum.CallResult<boolean> {
    const result = super.tryCall("strategies", "strategies(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  totalOutstandingGlobalDebt(): BigInt {
    const result = super.call(
      "totalOutstandingGlobalDebt",
      "totalOutstandingGlobalDebt():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalOutstandingGlobalDebt(): ethereum.CallResult<BigInt> {
    const result = super.tryCall(
      "totalOutstandingGlobalDebt",
      "totalOutstandingGlobalDebt():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  treasury(): Address {
    const result = super.call("treasury", "treasury():(address)", []);

    return result[0].toAddress();
  }

  try_treasury(): ethereum.CallResult<Address> {
    const result = super.tryCall("treasury", "treasury():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  withdrawalsDisabled(): boolean {
    const result = super.call(
      "withdrawalsDisabled",
      "withdrawalsDisabled():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_withdrawalsDisabled(): ethereum.CallResult<boolean> {
    const result = super.tryCall(
      "withdrawalsDisabled",
      "withdrawalsDisabled():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    const value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _OHM(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _gOHM(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _sOHM(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _staking(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _treasury(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _olympusAuthority(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AllowLPBorrowerCall extends ethereum.Call {
  get inputs(): AllowLPBorrowerCall__Inputs {
    return new AllowLPBorrowerCall__Inputs(this);
  }

  get outputs(): AllowLPBorrowerCall__Outputs {
    return new AllowLPBorrowerCall__Outputs(this);
  }
}

export class AllowLPBorrowerCall__Inputs {
  _call: AllowLPBorrowerCall;

  constructor(call: AllowLPBorrowerCall) {
    this._call = call;
  }

  get _borrower(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AllowLPBorrowerCall__Outputs {
  _call: AllowLPBorrowerCall;

  constructor(call: AllowLPBorrowerCall) {
    this._call = call;
  }
}

export class AllowNonLPBorrowerCall extends ethereum.Call {
  get inputs(): AllowNonLPBorrowerCall__Inputs {
    return new AllowNonLPBorrowerCall__Inputs(this);
  }

  get outputs(): AllowNonLPBorrowerCall__Outputs {
    return new AllowNonLPBorrowerCall__Outputs(this);
  }
}

export class AllowNonLPBorrowerCall__Inputs {
  _call: AllowNonLPBorrowerCall;

  constructor(call: AllowNonLPBorrowerCall) {
    this._call = call;
  }

  get _borrower(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AllowNonLPBorrowerCall__Outputs {
  _call: AllowNonLPBorrowerCall;

  constructor(call: AllowNonLPBorrowerCall) {
    this._call = call;
  }
}

export class BorrowCall extends ethereum.Call {
  get inputs(): BorrowCall__Inputs {
    return new BorrowCall__Inputs(this);
  }

  get outputs(): BorrowCall__Outputs {
    return new BorrowCall__Outputs(this);
  }
}

export class BorrowCall__Inputs {
  _call: BorrowCall;

  constructor(call: BorrowCall) {
    this._call = call;
  }

  get _ohmAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BorrowCall__Outputs {
  _call: BorrowCall;

  constructor(call: BorrowCall) {
    this._call = call;
  }
}

export class CreateLPCall extends ethereum.Call {
  get inputs(): CreateLPCall__Inputs {
    return new CreateLPCall__Inputs(this);
  }

  get outputs(): CreateLPCall__Outputs {
    return new CreateLPCall__Outputs(this);
  }
}

export class CreateLPCall__Inputs {
  _call: CreateLPCall;

  constructor(call: CreateLPCall) {
    this._call = call;
  }

  get _ohmAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _strategy(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _strategyParams(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class CreateLPCall__Outputs {
  _call: CreateLPCall;

  constructor(call: CreateLPCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class EmergencyShutdownCall extends ethereum.Call {
  get inputs(): EmergencyShutdownCall__Inputs {
    return new EmergencyShutdownCall__Inputs(this);
  }

  get outputs(): EmergencyShutdownCall__Outputs {
    return new EmergencyShutdownCall__Outputs(this);
  }
}

export class EmergencyShutdownCall__Inputs {
  _call: EmergencyShutdownCall;

  constructor(call: EmergencyShutdownCall) {
    this._call = call;
  }

  get active_(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class EmergencyShutdownCall__Outputs {
  _call: EmergencyShutdownCall;

  constructor(call: EmergencyShutdownCall) {
    this._call = call;
  }
}

export class ForceRepayCall extends ethereum.Call {
  get inputs(): ForceRepayCall__Inputs {
    return new ForceRepayCall__Inputs(this);
  }

  get outputs(): ForceRepayCall__Outputs {
    return new ForceRepayCall__Outputs(this);
  }
}

export class ForceRepayCall__Inputs {
  _call: ForceRepayCall;

  constructor(call: ForceRepayCall) {
    this._call = call;
  }

  get _borrower(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ForceRepayCall__Outputs {
  _call: ForceRepayCall;

  constructor(call: ForceRepayCall) {
    this._call = call;
  }
}

export class RemoveLPCall extends ethereum.Call {
  get inputs(): RemoveLPCall__Inputs {
    return new RemoveLPCall__Inputs(this);
  }

  get outputs(): RemoveLPCall__Outputs {
    return new RemoveLPCall__Outputs(this);
  }
}

export class RemoveLPCall__Inputs {
  _call: RemoveLPCall;

  constructor(call: RemoveLPCall) {
    this._call = call;
  }

  get _liquidity(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _strategy(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _lpToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _strategyParams(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class RemoveLPCall__Outputs {
  _call: RemoveLPCall;

  constructor(call: RemoveLPCall) {
    this._call = call;
  }

  get ohmRecieved(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RepayDebtWithCollateralCall extends ethereum.Call {
  get inputs(): RepayDebtWithCollateralCall__Inputs {
    return new RepayDebtWithCollateralCall__Inputs(this);
  }

  get outputs(): RepayDebtWithCollateralCall__Outputs {
    return new RepayDebtWithCollateralCall__Outputs(this);
  }
}

export class RepayDebtWithCollateralCall__Inputs {
  _call: RepayDebtWithCollateralCall;

  constructor(call: RepayDebtWithCollateralCall) {
    this._call = call;
  }
}

export class RepayDebtWithCollateralCall__Outputs {
  _call: RepayDebtWithCollateralCall;

  constructor(call: RepayDebtWithCollateralCall) {
    this._call = call;
  }
}

export class RepayDebtWithCollateralAndWithdrawTheRestCall extends ethereum.Call {
  get inputs(): RepayDebtWithCollateralAndWithdrawTheRestCall__Inputs {
    return new RepayDebtWithCollateralAndWithdrawTheRestCall__Inputs(this);
  }

  get outputs(): RepayDebtWithCollateralAndWithdrawTheRestCall__Outputs {
    return new RepayDebtWithCollateralAndWithdrawTheRestCall__Outputs(this);
  }
}

export class RepayDebtWithCollateralAndWithdrawTheRestCall__Inputs {
  _call: RepayDebtWithCollateralAndWithdrawTheRestCall;

  constructor(call: RepayDebtWithCollateralAndWithdrawTheRestCall) {
    this._call = call;
  }
}

export class RepayDebtWithCollateralAndWithdrawTheRestCall__Outputs {
  _call: RepayDebtWithCollateralAndWithdrawTheRestCall;

  constructor(call: RepayDebtWithCollateralAndWithdrawTheRestCall) {
    this._call = call;
  }
}

export class RepayDebtWithOHMCall extends ethereum.Call {
  get inputs(): RepayDebtWithOHMCall__Inputs {
    return new RepayDebtWithOHMCall__Inputs(this);
  }

  get outputs(): RepayDebtWithOHMCall__Outputs {
    return new RepayDebtWithOHMCall__Outputs(this);
  }
}

export class RepayDebtWithOHMCall__Inputs {
  _call: RepayDebtWithOHMCall;

  constructor(call: RepayDebtWithOHMCall) {
    this._call = call;
  }

  get _ohmAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RepayDebtWithOHMCall__Outputs {
  _call: RepayDebtWithOHMCall;

  constructor(call: RepayDebtWithOHMCall) {
    this._call = call;
  }
}

export class RevokeBorrowerCall extends ethereum.Call {
  get inputs(): RevokeBorrowerCall__Inputs {
    return new RevokeBorrowerCall__Inputs(this);
  }

  get outputs(): RevokeBorrowerCall__Outputs {
    return new RevokeBorrowerCall__Outputs(this);
  }
}

export class RevokeBorrowerCall__Inputs {
  _call: RevokeBorrowerCall;

  constructor(call: RevokeBorrowerCall) {
    this._call = call;
  }

  get _borrower(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RevokeBorrowerCall__Outputs {
  _call: RevokeBorrowerCall;

  constructor(call: RevokeBorrowerCall) {
    this._call = call;
  }
}

export class SeizeCall extends ethereum.Call {
  get inputs(): SeizeCall__Inputs {
    return new SeizeCall__Inputs(this);
  }

  get outputs(): SeizeCall__Outputs {
    return new SeizeCall__Outputs(this);
  }
}

export class SeizeCall__Inputs {
  _call: SeizeCall;

  constructor(call: SeizeCall) {
    this._call = call;
  }

  get _borrower(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SeizeCall__Outputs {
  _call: SeizeCall;

  constructor(call: SeizeCall) {
    this._call = call;
  }
}

export class SetAuthorityCall extends ethereum.Call {
  get inputs(): SetAuthorityCall__Inputs {
    return new SetAuthorityCall__Inputs(this);
  }

  get outputs(): SetAuthorityCall__Outputs {
    return new SetAuthorityCall__Outputs(this);
  }
}

export class SetAuthorityCall__Inputs {
  _call: SetAuthorityCall;

  constructor(call: SetAuthorityCall) {
    this._call = call;
  }

  get _newAuthority(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAuthorityCall__Outputs {
  _call: SetAuthorityCall;

  constructor(call: SetAuthorityCall) {
    this._call = call;
  }
}

export class SetBorrowerDebtLimitCall extends ethereum.Call {
  get inputs(): SetBorrowerDebtLimitCall__Inputs {
    return new SetBorrowerDebtLimitCall__Inputs(this);
  }

  get outputs(): SetBorrowerDebtLimitCall__Outputs {
    return new SetBorrowerDebtLimitCall__Outputs(this);
  }
}

export class SetBorrowerDebtLimitCall__Inputs {
  _call: SetBorrowerDebtLimitCall;

  constructor(call: SetBorrowerDebtLimitCall) {
    this._call = call;
  }

  get _borrower(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _limit(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetBorrowerDebtLimitCall__Outputs {
  _call: SetBorrowerDebtLimitCall;

  constructor(call: SetBorrowerDebtLimitCall) {
    this._call = call;
  }
}

export class SetGlobalDebtLimitCall extends ethereum.Call {
  get inputs(): SetGlobalDebtLimitCall__Inputs {
    return new SetGlobalDebtLimitCall__Inputs(this);
  }

  get outputs(): SetGlobalDebtLimitCall__Outputs {
    return new SetGlobalDebtLimitCall__Outputs(this);
  }
}

export class SetGlobalDebtLimitCall__Inputs {
  _call: SetGlobalDebtLimitCall;

  constructor(call: SetGlobalDebtLimitCall) {
    this._call = call;
  }

  get _limit(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetGlobalDebtLimitCall__Outputs {
  _call: SetGlobalDebtLimitCall;

  constructor(call: SetGlobalDebtLimitCall) {
    this._call = call;
  }
}

export class ToggleBorrowsCall extends ethereum.Call {
  get inputs(): ToggleBorrowsCall__Inputs {
    return new ToggleBorrowsCall__Inputs(this);
  }

  get outputs(): ToggleBorrowsCall__Outputs {
    return new ToggleBorrowsCall__Outputs(this);
  }
}

export class ToggleBorrowsCall__Inputs {
  _call: ToggleBorrowsCall;

  constructor(call: ToggleBorrowsCall) {
    this._call = call;
  }

  get active_(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class ToggleBorrowsCall__Outputs {
  _call: ToggleBorrowsCall;

  constructor(call: ToggleBorrowsCall) {
    this._call = call;
  }
}

export class ToggleDepositsCall extends ethereum.Call {
  get inputs(): ToggleDepositsCall__Inputs {
    return new ToggleDepositsCall__Inputs(this);
  }

  get outputs(): ToggleDepositsCall__Outputs {
    return new ToggleDepositsCall__Outputs(this);
  }
}

export class ToggleDepositsCall__Inputs {
  _call: ToggleDepositsCall;

  constructor(call: ToggleDepositsCall) {
    this._call = call;
  }

  get active_(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class ToggleDepositsCall__Outputs {
  _call: ToggleDepositsCall;

  constructor(call: ToggleDepositsCall) {
    this._call = call;
  }
}

export class ToggleRepaysCall extends ethereum.Call {
  get inputs(): ToggleRepaysCall__Inputs {
    return new ToggleRepaysCall__Inputs(this);
  }

  get outputs(): ToggleRepaysCall__Outputs {
    return new ToggleRepaysCall__Outputs(this);
  }
}

export class ToggleRepaysCall__Inputs {
  _call: ToggleRepaysCall;

  constructor(call: ToggleRepaysCall) {
    this._call = call;
  }

  get active_(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class ToggleRepaysCall__Outputs {
  _call: ToggleRepaysCall;

  constructor(call: ToggleRepaysCall) {
    this._call = call;
  }
}

export class ToggleWithdrawalsCall extends ethereum.Call {
  get inputs(): ToggleWithdrawalsCall__Inputs {
    return new ToggleWithdrawalsCall__Inputs(this);
  }

  get outputs(): ToggleWithdrawalsCall__Outputs {
    return new ToggleWithdrawalsCall__Outputs(this);
  }
}

export class ToggleWithdrawalsCall__Inputs {
  _call: ToggleWithdrawalsCall;

  constructor(call: ToggleWithdrawalsCall) {
    this._call = call;
  }

  get active_(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class ToggleWithdrawalsCall__Outputs {
  _call: ToggleWithdrawalsCall;

  constructor(call: ToggleWithdrawalsCall) {
    this._call = call;
  }
}

export class WhitelistStrategyCall extends ethereum.Call {
  get inputs(): WhitelistStrategyCall__Inputs {
    return new WhitelistStrategyCall__Inputs(this);
  }

  get outputs(): WhitelistStrategyCall__Outputs {
    return new WhitelistStrategyCall__Outputs(this);
  }
}

export class WhitelistStrategyCall__Inputs {
  _call: WhitelistStrategyCall;

  constructor(call: WhitelistStrategyCall) {
    this._call = call;
  }

  get _strategyAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WhitelistStrategyCall__Outputs {
  _call: WhitelistStrategyCall;

  constructor(call: WhitelistStrategyCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawLPCall extends ethereum.Call {
  get inputs(): WithdrawLPCall__Inputs {
    return new WithdrawLPCall__Inputs(this);
  }

  get outputs(): WithdrawLPCall__Outputs {
    return new WithdrawLPCall__Outputs(this);
  }
}

export class WithdrawLPCall__Inputs {
  _call: WithdrawLPCall;

  constructor(call: WithdrawLPCall) {
    this._call = call;
  }

  get _liquidity(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _lpToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawLPCall__Outputs {
  _call: WithdrawLPCall;

  constructor(call: WithdrawLPCall) {
    this._call = call;
  }
}

export class WithdrawTokenCall extends ethereum.Call {
  get inputs(): WithdrawTokenCall__Inputs {
    return new WithdrawTokenCall__Inputs(this);
  }

  get outputs(): WithdrawTokenCall__Outputs {
    return new WithdrawTokenCall__Outputs(this);
  }
}

export class WithdrawTokenCall__Inputs {
  _call: WithdrawTokenCall;

  constructor(call: WithdrawTokenCall) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawTokenCall__Outputs {
  _call: WithdrawTokenCall;

  constructor(call: WithdrawTokenCall) {
    this._call = call;
  }
}
